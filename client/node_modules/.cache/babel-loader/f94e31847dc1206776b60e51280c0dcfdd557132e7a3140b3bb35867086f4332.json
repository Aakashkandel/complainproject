{"ast":null,"code":"import { call, put, takeEvery } from 'redux-saga/effects';\nimport { getcatsSuccess, getcatsFailure } from './DemoSlice'; // Added failure action\n\n// Saga worker function to fetch cats\nfunction* demofetch() {\n  try {\n    // API call to fetch cat breeds\n    const response = yield call(() => fetch('https://api.thecatapi.com/v1/breeds'));\n\n    // Check for successful response status\n    if (!response.ok) {\n      throw new Error('Failed to fetch cat breeds');\n    }\n\n    // Parsing the response JSON\n    const cats = yield response.json();\n\n    // Slice the response to get only the first 10 breeds\n    const responseShorted = cats.slice(0, 10);\n\n    // Dispatch the success action with the data\n    yield put(getcatsSuccess(responseShorted));\n  } catch (error) {\n    // In case of an error, dispatch the failure action\n    yield put(getcatsFailure(error.message));\n  }\n}\nfunction* catsaga() {\n  yield takeEvery('demo/getcatsFetch', demofetch);\n}\nexport default catsaga;","map":{"version":3,"names":["call","put","takeEvery","getcatsSuccess","getcatsFailure","demofetch","response","fetch","ok","Error","cats","json","responseShorted","slice","error","message","catsaga"],"sources":["/home/aakashkandel/Documents/complain project/client/src/features/Demosaga.js"],"sourcesContent":["import { call, put, takeEvery } from 'redux-saga/effects';\nimport { getcatsSuccess, getcatsFailure } from './DemoSlice'; // Added failure action\n\n// Saga worker function to fetch cats\nfunction* demofetch() {\n  try {\n    // API call to fetch cat breeds\n    const response = yield call(() => fetch('https://api.thecatapi.com/v1/breeds'));\n\n    // Check for successful response status\n    if (!response.ok) {\n      throw new Error('Failed to fetch cat breeds');\n    }\n\n    // Parsing the response JSON\n    const cats = yield response.json();\n\n    // Slice the response to get only the first 10 breeds\n    const responseShorted = cats.slice(0, 10);\n\n    // Dispatch the success action with the data\n    yield put(getcatsSuccess(responseShorted));\n  } catch (error) {\n    // In case of an error, dispatch the failure action\n    yield put(getcatsFailure(error.message));\n  }\n}\n\nfunction* catsaga() {\n  yield takeEvery('demo/getcatsFetch', demofetch); \n}\n\nexport default catsaga;\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,GAAG,EAAEC,SAAS,QAAQ,oBAAoB;AACzD,SAASC,cAAc,EAAEC,cAAc,QAAQ,aAAa,CAAC,CAAC;;AAE9D;AACA,UAAUC,SAASA,CAAA,EAAG;EACpB,IAAI;IACF;IACA,MAAMC,QAAQ,GAAG,MAAMN,IAAI,CAAC,MAAMO,KAAK,CAAC,qCAAqC,CAAC,CAAC;;IAE/E;IACA,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;IAC/C;;IAEA;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;;IAElC;IACA,MAAMC,eAAe,GAAGF,IAAI,CAACG,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;;IAEzC;IACA,MAAMZ,GAAG,CAACE,cAAc,CAACS,eAAe,CAAC,CAAC;EAC5C,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd;IACA,MAAMb,GAAG,CAACG,cAAc,CAACU,KAAK,CAACC,OAAO,CAAC,CAAC;EAC1C;AACF;AAEA,UAAUC,OAAOA,CAAA,EAAG;EAClB,MAAMd,SAAS,CAAC,mBAAmB,EAAEG,SAAS,CAAC;AACjD;AAEA,eAAeW,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}